name: Windows build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          version: '6.9.1'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          modules: 'qt5compat qtnetworkauth qtshadertools'
          tools: 'tools_ifw tools_mingw1310'
          cache: true

      - name: Install Boost.Hana
        shell: cmd
        run: |
          git clone --depth=1 https://github.com/boostorg/hana.git temp_hana
          mkdir libs\boost
          xcopy /E /I /Y temp_hana\include\boost libs\boost
          copy temp_hana\include\boost\hana.hpp libs\boost\hana.hpp

      - name: Clone and build QtKeychain with Qt6
        run: |
          git clone --depth=1 https://github.com/frankosterfeld/qtkeychain.git qtkeychain
          cd qtkeychain
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -DBUILD_WITH_QT6=1 ..
          cmake --build . 

      - name: Copy QtKeychain headers and DLL
        run: |
          mkdir libs\qtkeychain\include\qtkeychain
          mkdir libs\qtkeychain\lib
          
          copy qtkeychain\build\bin\libqt6keychain.dll libs\qtkeychain\lib\libqt6keychain.dll
          copy qtkeychain\build\qtkeychain\qkeychain_export.h libs\qtkeychain\include\qtkeychain\qkeychain_export.h
          copy qtkeychain\qtkeychain\keychain.h libs\qtkeychain\include\qtkeychain\keychain.h
        shell: cmd

      - name: Generate secrets.json
        run: python3 scripts/generate-secrets.py
        env:
          YANDEX_CLIENT_ID: ${{ secrets.YANDEX_CLIENT_ID }}

      - name: Building application
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="%Qt6_DIR%" -G "MinGW Makefiles"
          cmake --build . --config Release --parallel

      - name: Upload build folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-folder
          path: build/

      - name: Setup deploy folder
        run: |
          mkdir deploy
          copy libs\qtkeychain\lib\libqt6keychain.dll deploy\
          copy build\YandexHomeDesktop.exe deploy\
          xcopy build\YandexHomeDesktop deploy\YandexHomeDesktop /E /I /Y
          copy build\YandexHomeDesktopComponents.dll deploy\
          copy build\YandexHomeDesktopIotControls.dll deploy\
          copy build\YandexHomeDesktopPages.dll deploy\
          copy build\YandexHomeDesktopUi.dll deploy\

      - name: Run windeployqt
        shell: cmd
        run: |
          set PATH=%Qt6_DIR%\bin;%PATH%
          cd deploy
          windeployqt . --no-translations --qmldir "%GITHUB_WORKSPACE%\src"

      - name: Upload deploy folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-folder
          path: deploy/

      - name: Copy deploy folder into installer package
        run: |
          mkdir -p installer/packages/com.artemyagodnik.yandexhomedesktop/data
          xcopy /E /I deploy installer\packages\com.artemyagodnik.yandexhomedesktop\data

      - name: Create installer
        run: |
          & binarycreator.exe -c "installer/config/config.xml" -p "installer/packages" "yhd-installer.exe"

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: Installer
          path: yhd-installer.exe